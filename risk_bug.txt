> riskAdjComp <- RiskAdjustedComparisons$new(p)
[1] "Training data set immediately before training"
 logi NA
NULL
[1] "Entire data set at the top of the constructor"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : int  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : int  10001 10001 10001 10002 10002 10002 10002 10003 10003 10003 ...
 $ SystolicBPNBR      : int  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : int  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Entire df after removing cols with DTS"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : int  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : int  10001 10001 10001 10002 10002 10002 10002 10003 10003 10003 ...
 $ SystolicBPNBR      : int  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : int  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Now going to remove zero-var cols..."
[1] "Entire df after removing feature cols w/zero var"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : int  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : int  10001 10001 10001 10002 10002 10002 10002 10003 10003 10003 ...
 $ SystolicBPNBR      : int  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : int  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Entire data set after converting to df and chr to factor"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : int  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : int  10001 10001 10001 10002 10002 10002 10002 10003 10003 10003 ...
 $ SystolicBPNBR      : int  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : int  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Entire data set after imputation"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : num  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : num  10001 10001 10001 10002 10002 ...
 $ SystolicBPNBR      : num  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : num  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Entire data set after removing cols with DTS (ie date cols)"
'data.frame':	1000 obs. of  8 variables:
 $ PatientEncounterID : num  1 2 3 4 5 6 7 8 9 10 ...
 $ PatientID          : num  10001 10001 10001 10002 10002 ...
 $ SystolicBPNBR      : num  167 153 170 187 188 185 189 149 155 160 ...
 $ LDLNBR             : num  195 214 191 135 125 178 101 160 144 130 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 4 5 6.6 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Now going to remove grainCol..."
[1] "Training data set after splitting from main df"
'data.frame':	801 obs. of  8 variables:
 $ PatientEncounterID : num  1 2 3 4 5 6 9 10 11 13 ...
 $ PatientID          : num  10001 10001 10001 10002 10002 ...
 $ SystolicBPNBR      : num  167 153 170 187 188 185 155 160 155 153 ...
 $ LDLNBR             : num  195 214 191 135 125 178 144 130 143 218 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 6.6 8 6.7 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 2 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Validation data set after splitting from main df"
'data.frame':	199 obs. of  8 variables:
 $ PatientEncounterID : num  7 8 12 17 18 33 36 48 51 53 ...
 $ PatientID          : num  10002 10003 10003 10004 10004 ...
 $ SystolicBPNBR      : num  189 149 149 127 131 167 163 126 188 184 ...
 $ LDLNBR             : num  101 160 159 219 219 108 201 203 157 144 ...
 $ A1CNBR             : num  4 5 5.1 8 8 5 5 6.9 5.3 7 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 1 1 1 1 1 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
[1] "Training data set after removing rows where pred col is null"
'data.frame':	801 obs. of  8 variables:
 $ PatientEncounterID : num  1 2 3 4 5 6 9 10 11 13 ...
 $ PatientID          : num  10001 10001 10001 10002 10002 ...
 $ SystolicBPNBR      : num  167 153 170 187 188 185 155 160 155 153 ...
 $ LDLNBR             : num  195 214 191 135 125 178 144 130 143 218 ...
 $ A1CNBR             : num  4.2 5 4 4.4 4.3 5 6.6 8 6.7 8 ...
 $ GenderFLG          : Factor w/ 2 levels "F","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ ThirtyDayReadmitFLG: Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 2 1 2 ...
 $ InTestWindowFLG    : Factor w/ 2 levels "N","Y": 1 1 1 1 1 1 1 1 1 1 ...
NULL
> capture.output(riskAdjComp$run())
[1] "Fitting mtry = 2 on full training set"                               
[2] "Fitting mtry = 2 on full training set"                               
[3] "[1] \"Finished calculating your risk-adjusted comparison\""          
[4] "[1] \"Note that positive values denote performance above expected:\""
[5] "  groupbyList comparativePerformance"                                
[6] "1           M                   -6.5"                                
[7] "2           F                    6.5"
